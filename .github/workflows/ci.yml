name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # Environnement de travail (Ubuntu)

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Vérification du code du repository

    - name: Set up Python
      uses: actions/setup-python@v2  # Configuration de l'environnement Python
      with:
        python-version: '3.8'  # Vous pouvez spécifier la version de Python ici

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip  # Mise à jour de pip
        pip install -r requirements.txt     # Installation des dépendances depuis requirements.txt

    - name: Set up virtual environment
      run: |
        python3 -m venv venv  # Création de l'environnement virtuel
        ./venv/bin/pip install --upgrade pip  # Mise à jour de pip dans l'environnement virtuel
        ./venv/bin/pip install -r requirements.txt  # Installation des dépendances dans l'environnement virtuel

    - name: Start MLflow server
      run: |
        nohup mlflow ui --host 0.0.0.0 --port 5000 &  # Démarrage du serveur MLflow en arrière-plan
        sleep 5  # Attente pour que le serveur démarre

    - name: Prepare data
      run: |
        ./venv/bin/python main.py --prepare  # Préparation des données

    - name: Train model
      run: |
        ./venv/bin/python main.py --train  # Entraînement du modèle

    - name: Evaluate model
      run: |
        ./venv/bin/python main.py --evaluate  # Évaluation du modèle

    - name: Run tests
      run: |
        ./venv/bin/python -m pytest tests/  # Exécution des tests unitaires

    - name: Clean up
      run: |
        rm -rf venv  # Nettoyage de l'environnement virtuel
        rm -f model.pkl scaler.pkl pca.pkl  # Suppression des modèles sauvegardés
        rm -rf __pycache__ .pytest_cache .pylint.d  # Suppression des fichiers temporaires
